[project]
name = "biohunter"
version = "0.1.0"
description = "Multi agent system for target mining"
readme = "README.md"
keywords = [
  "fastapi",
  "scaffold",
  "sqlmodel",
  "tools",
  "web",
]
license = "MIT"
maintainers = [
  { name = "tyvekzhang", email = "tyvekzhang@gmail.com" },
]
authors = [
  { name = "tyvekzhang", email = "tyvekzhang@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "autogen-agentchat[openai]>=0.7.5",
    "autogen-core>=0.0.2",
    "autogen-ext[openai]>=0.7.5",
    "fastlib-py>=0.3.4",
    "fastmcp>=2.12.5",
]

[dependency-groups]
dev = [
  "coverage>=7.8",
  "httpx>=0.28.1",
  "pre-commit>=4.2",
  "pytest>=8.3.5",
  "pytest-asyncio>=1.1",
]

docs = [
  "sphinx>=7.2.6",
  "sphinx-rtd-theme>=2",
]

[tool.ruff]
line-length = 88

include = [ "main.py", "src/**/*.py" ]
exclude = [ "doc/**/*.py" ]

lint.select = [
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "I",  # isort
  "UP", # pyupgrade
  "W",  # pycodestyle warnings
]
lint.ignore = [
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
  "E501", # line too long, handled by black
  "W191", # indentation contains tabs
]
lint.isort.known-third-party = [
  "aiosqlite",
  "alembic",
  "diskcache",
  "fastapi",
  "loguru",
  "openpyxl",
  "pandas",
  "passlib",
  "pyjwt",
  "sqlmodel",
  "starlette",
  "pydantic",
  "bcrypt",
  "cryptography",
]
# Preserve types, even if a file imports `from __future__ import annotations`.
lint.pyupgrade.keep-runtime-typing = true

[tool.coverage.run]
parallel = true
data_file = "coverage/.coverage"
source = [ "src/main/app", "src/tests", "main.py" ]
context = '${CONTEXT}'
dynamic_context = "test_function"
omit = [
]

[tool.coverage.report]
fail_under = 90
show_missing = true
sort = "-Cover"

[tool.coverage.html]
show_contexts = true

[tool.mypy]
strict = true

[[tool.uv.index]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"
default = true
